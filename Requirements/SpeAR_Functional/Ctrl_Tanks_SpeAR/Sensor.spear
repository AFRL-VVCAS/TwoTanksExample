Relation Ctrl_Tanks.Sensor;
// This is the requirements on binary liquid height sensors
// -> Once the liquid reaches the placement height of the sensor it triggers an ON (ACTIVE) state
// -> If the water has not reached the sensor it does not produce a signal (FALSE/INACTIVE) 

Uses Ctrl_Tanks.definitions.*;

Inputs:
	liquid_height : real;
	placement_height : real;
	
Outputs:
	active : bool;
	
State:	

Requirements:
	// assumptions on the inputs
	a_liq_ht = global :: always liquid_height >= 0.0;
	a_pla_ht = global :: always placement_height >= 0.0;

	r_active = while liquid_height >= placement_height :: always active;
	r_inactive = while liquid_height < placement_height :: always not active;
	
Properties:
	p_sensor_01 = while active :: always liquid_height >= placement_height;
	p_sensor_02 = while not active :: always liquid_height < placement_height;
	
	// These properties will prove due to the assumptions but is not under the control of this component
//	p_sensor_03 = global :: always placement_height >= 0.0;
//	p_sensor_04 = global :: always liquid_height >= 0.0;
	
//	canary = global :: always false;
	